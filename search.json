[
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/fantasy-football-predictions-2023/index.html",
    "href": "posts/fantasy-football-predictions-2023/index.html",
    "title": "Fantasy Football Predictions for 2023",
    "section": "",
    "text": "With the 2023 NFL Draft having concluded, most teams are prepared to head into the 2023 NFL season with exciting young players to build around for the long-term future. Do die hard fans care about their growth and development? Obviously. Do they care even more about how it impacts their fantasy position? You better believe it.\nEvery year, millions of people create a fantasy football league for their friends, family, and colleagues to compete in a weekly contest of football knowledge. However, the trick for having a really successful fantasy team is by drafting rookies who many believe to be sleepers in terms of their fantasy production.\nIn this post, I will attempt to reveal the 5 best rookie wide receivers that will produce the most fantasy points during the 2023 NFL season. I will predict the best fantasy production of rookie wide receivers based on the following: total yards per reception, average length of catch, total touchdowns, and their pre-draft grade.\n\n\nCode\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(cfbfastR)\nlibrary(janitor)\nlibrary(bonsai)\nlibrary(gt)\nset.seed(1234)\n\nwrstats <- read_csv(\"https://mattwaite.github.io/sportsdatafiles/wrdraftedstatswithratingsfixed.csv\")\n\nwrselected <- wrstats%>%\n  select(\n    name,\n    year,\n    college_team,\n    nfl_team,\n    overall,\n    total_ypr,\n    average_long,\n    total_touchdowns,\n    pre_draft_grade,\n    FantPt\n  ) %>% na.omit()\n\nplayer_split <- initial_split(wrselected, prop = .8)\n\nplayer_train <- training(player_split)\nplayer_test <- testing(player_split)\n\nplayer_recipe <- \n  recipe(FantPt ~ ., data = player_train) %>%\n  update_role(name, year, college_team, nfl_team, new_role = \"ID\")\n\nxg_mod <- boost_tree(\n  trees = tune(), \n  learn_rate = tune(),\n  tree_depth = tune(), \n  min_n = tune(),\n  loss_reduction = tune(), \n  sample_size = tune(), \n  mtry = tune(), \n  ) %>% \n  set_mode(\"regression\") %>% \n  set_engine(\"xgboost\")\n\nlightgbm_mod <- \n  boost_tree() %>%\n  set_engine(\"lightgbm\") %>%\n  set_mode(mode = \"regression\")\n\nxg_workflow <- \n  workflow() %>% \n  add_model(xg_mod) %>% \n  add_recipe(player_recipe)\n\nlightgbm_workflow <- \n  workflow() %>% \n  add_model(lightgbm_mod) %>% \n  add_recipe(player_recipe)\n\nxgb_grid <- grid_latin_hypercube(\n  trees(),\n  tree_depth(),\n  min_n(),\n  loss_reduction(),\n  sample_size = sample_prop(),\n  finalize(mtry(), player_train),\n  learn_rate()\n)\n\nplayer_folds <- vfold_cv(player_train)\n\nxgb_res <- tune_grid(\n  xg_workflow,\n  resamples = player_folds,\n  grid = xgb_grid,\n  control = control_grid(save_pred = TRUE)\n)\n\nbest_rmse <- select_best(xgb_res, \"rmse\")\n\nfinal_xgb <- finalize_workflow(\n  xg_workflow,\n  best_rmse\n)\n\nxg_fit <- \n  final_xgb %>% \n  fit(data = player_train)\n\nlightgbm_fit <- \n  lightgbm_workflow %>% \n  fit(data = player_train)\n\nxgpredict <- \n  xg_fit %>% \n  predict(new_data = player_train) %>%\n  bind_cols(player_train) \n\nlightgbmpredict <- \n  lightgbm_fit %>% \n  predict(new_data = player_train) %>%\n  bind_cols(player_train) \n\n\nlightgbmpredict <- \n  lightgbm_fit %>% \n  predict(new_data = player_test) %>%\n  bind_cols(player_test) \n\nxgpredict <- \n  xg_fit %>% \n  predict(new_data = player_test) %>%\n  bind_cols(player_test) \n\n\ncurrentdraft <- cfbd_draft_picks(2023) %>% filter(position == \"Wide Receiver\")\n\nstats18 <- cfbd_stats_season_player(2018, category = \"receiving\") %>% remove_empty(which=c(\"cols\")) %>% mutate(year = 2018)\n\nstats19 <- cfbd_stats_season_player(2019, category = \"receiving\") %>% remove_empty(which=c(\"cols\")) %>% mutate(year = 2019)\n\nstats20 <- cfbd_stats_season_player(2020, category = \"receiving\") %>% remove_empty(which=c(\"cols\")) %>% mutate(year = 2020)\n\nstats21 <- cfbd_stats_season_player(2021, category = \"receiving\") %>% remove_empty(which=c(\"cols\")) %>% mutate(year = 2021)\n\nstats22 <- cfbd_stats_season_player(2022, category = \"receiving\") %>% remove_empty(which=c(\"cols\")) %>% mutate(year = 2022)\n\ncurrent_stats <- bind_rows(stats18, stats19, stats20, stats21, stats22)\n\ncurrentrating <- cfbd_ratings_sp(2022) %>% mutate(draft_year = year+1)\n\ncurrenttotalstats <- current_stats %>% \n  group_by(athlete_id) %>%\n  summarize(\n    total_receptions = sum(receiving_rec),\n    total_yards = sum(receiving_yds),\n    total_touchdowns = sum(receiving_td),\n    average_long = mean(receiving_long),\n  ) %>%\n  mutate(\n    total_ypr = total_yards/total_receptions,\n    athlete_id = as.numeric(athlete_id)\n  )\n\ncurrentdrafted <- currentdraft %>% inner_join(currenttotalstats, by=c(\"college_athlete_id\"=\"athlete_id\")) \n\ncurrentwrdraftclass <- currentdrafted %>% inner_join(currentrating, by=c(\"college_team\"=\"team\", \"year\"=\"draft_year\"))\n\ncurrentwrselected <- currentwrdraftclass %>%\n  select(\n    name,\n    year,\n    college_team,\n    nfl_team,\n    overall,\n    average_long,\n    total_ypr,\n    total_touchdowns,\n    pre_draft_grade\n  ) %>% na.omit()\n\ncurrentxgpredict <- \n  xg_fit %>% \n  predict(new_data = currentwrselected) %>%\n  bind_cols(currentwrselected) \n\ncurrentxgpredict %>% \n  top_n(5, wt=.pred) %>%\n  select(name, nfl_team, overall, .pred) %>%\n  arrange(desc(.pred)) %>%\n  gt() %>% \n  cols_label(\n    name = \"Player\",\n    nfl_team = \"Team\",\n    overall = \"Draft Position\",\n    .pred = \"Predicted Fantasy Points\"\n  ) %>%\n  tab_header(\n    title = \"Top 5 Rookie Receivers Based on Fantasy Expectation\",\n    subtitle = \"No Trey Palmer unfortunately...\"\n  ) %>%  \n  tab_source_note(\n    source_note = md(\"**By:** Peter Educate |  **Source:** [Pro Football Reference](https://www.sports-reference.com/cfb/seasons/)\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %>%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %>%\n  opt_row_striping() %>% \n  opt_table_lines(\"none\")\n\n\n\n\n\n\n  \n    \n      Top 5 Rookie Receivers Based on Fantasy Expectation\n    \n    \n      No Trey Palmer unfortunately...\n    \n  \n  \n    \n      Player\n      Team\n      Draft Position\n      Predicted Fantasy Points\n    \n  \n  \n    Jayden Reed\nGreen Bay\n50\n151.90433\n    Quentin Johnston\nLos Angeles\n21\n106.57175\n    Jalin Hyatt\nNew York\n73\n99.06715\n    Marvin Mims\nDenver\n63\n97.96793\n    Jonathan Mingo\nCarolina\n39\n88.19407\n  \n  \n    \n      By: Peter Educate |  Source: Pro Football Reference\n    \n  \n  \n\n\n\n\nAccording to my current predictors, Jayden Reed of the Packers is set to lead all rookie WRs in fantasy points with 151.9 followed by Quentin Johnston of the Chargers, then Giants’ Jalin Hyatt, then Broncos’ Marvin Mims, and Panthers’ Johnathan Mingo rounding out the top 5. Let’s see how these rookies would compare to former rookie seasons in the NFL.\n\n\nCode\nwrstats %>% \n  select(name, nfl_team, year, FantPt) %>% \n  arrange(desc(FantPt)) %>% \n  top_n(5, FantPt) %>%\n  gt() %>%\n  cols_label(\n    name = \"Player\",\n    nfl_team = \"Team\",\n    year = \"Year\",\n    FantPt = \"Fantasy Points\"\n  ) %>%\n  tab_header(\n    title = \"Top 5 Best Rookie Receivers Based on Fantasy Production\",\n    subtitle = \"Yeah Ja'Marr Chase is built a little different\"\n  ) %>%  \n  tab_source_note(\n    source_note = md(\"**By:** Peter Educate |  **Source:** [Pro Football Reference](https://www.sports-reference.com/cfb/seasons/)\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %>%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %>%\n  opt_row_striping() %>% \n  opt_table_lines(\"none\")\n\n\n\n\n\n\n  \n    \n      Top 5 Best Rookie Receivers Based on Fantasy Production\n    \n    \n      Yeah Ja'Marr Chase is built a little different\n    \n  \n  \n    \n      Player\n      Team\n      Year\n      Fantasy Points\n    \n  \n  \n    Ja'Marr Chase\nCincinnati\n2021\n224\n    Odell Beckham Jr.\nNew York\n2014\n204\n    Justin Jefferson\nMinnesota\n2020\n186\n    Mike Evans\nTampa Bay\n2014\n177\n    Antonio Gibson\nWashington\n2020\n166\n  \n  \n    \n      By: Peter Educate |  Source: Pro Football Reference\n    \n  \n  \n\n\n\n\nWell, I suppose my model does not expect anything too crazy from this receiver class this year unlike these superstars. Draft experts claimed that this was a weak class in terms of receiver talent but perhaps someone like Jayden Reed can outperform his expected production. Other receivers like Quentin Johnston may shine in some instances but expect less production. Ultimately, if you’re looking to draft a receiver for your fantasy team this upcoming season, stick with a veteran or take a swing on Jayden Reed.\n(Or just draft Ja’marr Chase)."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/predicting-most-unpredictable-tournament-and-being-trash/index.html",
    "href": "posts/predicting-most-unpredictable-tournament-and-being-trash/index.html",
    "title": "Predicting a basketball tournament based on luck went about as well as expected.",
    "section": "",
    "text": "Well it was that time of year again. 64 teams complied of grown men competing to win a championship in a sport where they try to put an orange ball through a net more than the other team. Year after these tournaments occur where millions try to predict the correct team to win the Natty. Using common sense and advanced statistical software, I thought it would be a good idea to throw my hat into the ring to outsmart the “casual” fan. What could go wrong…?\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.2.1      ✔ dplyr   1.0.10\n✔ tidyr   1.3.0      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 1.0.0 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\nCode\nlibrary(tidymodels)\n\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.3     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.1.0     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.4     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use tidymodels_prefer() to resolve common conflicts.\n\n\nCode\nlibrary(hoopR)\nlibrary(zoo)\n\n\n\nAttaching package: 'zoo'\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nCode\nlibrary(bonsai)\nlibrary(lightgbm)\n\n\nLoading required package: R6\n\nAttaching package: 'lightgbm'\n\nThe following object is masked from 'package:dplyr':\n\n    slice\n\n\nCode\nset.seed(1234)\n\ngames <- load_mbb_team_box(2015:2023)\n\nplayers <- load_mbb_player_box(2015:2023)\n\ngameswithpossessions <- games %>%\n  separate(field_goals_made_field_goals_attempted, into=c(\"field_goals_made\", \"field_goals_attempted\"), sep=\"-\") %>%\n  separate(three_point_field_goals_made_three_point_field_goals_attempted, into=c(\"three_point_field_goals_made\", \"three_point_field_goals_attempted\"), sep=\"-\") %>%\n  separate(free_throws_made_free_throws_attempted, into=c(\"free_throws_made\", \"free_throws_attempted\"), sep=\"-\") %>%\n  mutate_at(12:34, as.numeric) %>%\n  mutate(\n    possessions = round(field_goals_attempted - offensive_rebounds + turnovers +(.475 * free_throws_attempted), digits = 0)) %>%\n  mutate(points_scored = free_throws_made + ((field_goals_made - three_point_field_goals_made)*2 + (three_point_field_goals_made*3))) %>%\n  mutate(ppp = (points_scored/possessions) *100) %>%\n  filter(possessions <= 90 & possessions >=53) \n\n\nrollingteamstats <- gameswithpossessions %>% \n  group_by(team_short_display_name, season) %>%\n  arrange(game_date) %>%\n  mutate(\n    team_score = ((field_goals_made-three_point_field_goals_made) * 2) + (three_point_field_goals_made*3) + free_throws_made,\n    team_rolling_ppp = rollmean(lag(ppp, n=1), k=5, align=\"right\", fill=NA),\n    team_rolling_blocks = rollmean(lag(blocks, n=1), k=5, align=\"right\", fill=NA), \n    team_rolling_threes = rollmean(lag(three_point_field_goals_made, n=1), k=5, align=\"right\", fill=NA),\n    team_rolling_rebounds = rollmean(lag(total_rebounds, n=1), k=5, align=\"right\", fill=NA)\n    ) %>% \n  ungroup() \n\nteam_side <- rollingteamstats %>%\n  select(\n    game_id,\n    team_id, \n    team_short_display_name, \n    opponent_id, \n    game_date, \n    season, \n    team_score, \n    team_rolling_ppp,\n    team_rolling_blocks,\n    team_rolling_threes,\n    team_rolling_rebounds\n    ) \n\nopponent_side <- team_side %>%\n  select(-opponent_id) %>% \n  rename(\n    opponent_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_rolling_ppp = team_rolling_ppp,\n    opponent_rolling_rebounds = team_rolling_rebounds,\n    opponent_rolling_threes = team_rolling_threes,\n    opponent_rolling_blocks = team_rolling_blocks\n  ) %>%\n  mutate(opponent_id = as.numeric(opponent_id)\n)\n\ngames <- team_side %>% inner_join(opponent_side)\n\n\nJoining, by = c(\"game_id\", \"opponent_id\", \"game_date\", \"season\")\n\n\nCode\ngames <- games %>% mutate(\n  team_result = as.factor(case_when(\n    team_score > opponent_score ~ \"W\",\n    opponent_score > team_score ~ \"L\"\n))) %>% na.omit()\n\nmodelgames <- games %>% \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_short_display_name, \n    season, \n    team_rolling_ppp, \n    opponent_rolling_ppp, \n    team_rolling_rebounds,\n    opponent_rolling_rebounds,\n    team_rolling_threes,\n    opponent_rolling_threes,\n    team_rolling_blocks,\n    opponent_rolling_blocks,\n    team_result\n    ) %>% \n  na.omit()\n\ngame_split <- initial_split(modelgames, prop = .8)\ngame_train <- training(game_split)\ngame_test <- testing(game_split)\n\nlightgbm_mod <- \n  boost_tree() %>%\n  set_engine(\"lightgbm\") %>%\n  set_mode(mode = \"classification\")\n\ngame_recipe <- \n  recipe(team_result ~ ., data = game_train) %>% \n  update_role(game_id, game_date, team_short_display_name, opponent_short_display_name, season, new_role = \"ID\") %>%\n  step_normalize(all_predictors())\n\nlightgbm_workflow <- \n  workflow() %>% \n  add_model(lightgbm_mod) %>% \n  add_recipe(game_recipe)\n\nlightgbm_fit <- \n  lightgbm_workflow %>% \n  fit(data = game_train)\n\nrollingteamstats <- gameswithpossessions %>% \n  group_by(team_short_display_name, season) %>%\n  arrange(game_date) %>%\n  mutate(\n    team_score = ((field_goals_made-three_point_field_goals_made) * 2) + (three_point_field_goals_made*3) + free_throws_made,\n    team_rolling_ppp = rollmean(ppp, k=5, align=\"right\", fill=NA),\n    team_rolling_blocks = rollmean(blocks, k=5, align=\"right\", fill=NA), \n    team_rolling_threes = rollmean(three_point_field_goals_made, k=5, align=\"right\", fill=NA),\n    team_rolling_rebounds = rollmean(total_rebounds, k=5, align=\"right\", fill=NA)\n    ) %>% \n  ungroup() \n\nteam_side <- rollingteamstats %>%\n  select(\n    game_id,\n    team_id, \n    team_short_display_name, \n    opponent_id, \n    game_date, \n    season, \n    team_score, \n    team_rolling_ppp,\n    team_rolling_blocks,\n    team_rolling_threes,\n    team_rolling_rebounds\n    ) \n\nopponent_side <- team_side %>%\n  select(-opponent_id) %>% \n  rename(\n    opponent_id = team_id,\n    opponent_short_display_name = team_short_display_name,\n    opponent_score = team_score,\n    opponent_rolling_ppp = team_rolling_ppp,\n    opponent_rolling_rebounds = team_rolling_rebounds,\n    opponent_rolling_threes = team_rolling_threes,\n    opponent_rolling_blocks = team_rolling_blocks\n  ) %>%\n  mutate(opponent_id = as.numeric(opponent_id)\n)\n\ngames <- team_side %>% inner_join(opponent_side)\n\n\nJoining, by = c(\"game_id\", \"opponent_id\", \"game_date\", \"season\")\n\n\nCode\ngames <- games %>% mutate(\n  team_result = as.factor(case_when(\n    team_score > opponent_score ~ \"W\",\n    opponent_score > team_score ~ \"L\"\n))) %>% na.omit()\n\nmodelgames <- games %>% \n  select(\n    game_id, \n    game_date, \n    team_short_display_name, \n    opponent_short_display_name, \n    season, \n    team_rolling_ppp, \n    opponent_rolling_ppp, \n    team_rolling_rebounds,\n    opponent_rolling_rebounds,\n    team_rolling_threes,\n    opponent_rolling_threes,\n    team_rolling_blocks,\n    opponent_rolling_blocks,\n    team_result\n    ) %>% \n  na.omit()\n\nwestround1games <- tibble(\n  team_short_display_name=\"Kansas\",\n  opponent_short_display_name=\"Howard\"\n) %>% add_row(\n  team_short_display_name=\"Arkansas\",\n  opponent_short_display_name=\"Illinois\"\n) %>% add_row(\n  team_short_display_name=\"Saint Mary's\",\n  opponent_short_display_name=\"VCU\"\n) %>% add_row(\n  team_short_display_name=\"UConn\",\n  opponent_short_display_name=\"Iona\"\n) %>% add_row(\n  team_short_display_name=\"TCU\",\n  opponent_short_display_name=\"Arizona State\"\n) %>% add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_short_display_name=\"Grand Canyon\"\n) %>% add_row(\n  team_short_display_name=\"Northwestern\",\n  opponent_short_display_name=\"Boise State\"\n) %>% add_row(\n  team_short_display_name=\"UCLA\",\n  opponent_short_display_name=\"UNC Asheville\"\n)\n\nwestround1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(westround1games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nwestround1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(westround1games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nwestround1 <- lightgbm_fit %>% \n  predict(new_data = westround1games) %>%\n  bind_cols(westround1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround1 <- lightgbm_fit %>% \n  predict(new_data = westround1games, type=\"prob\") %>%\n  bind_cols(westround1) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nwestround1\n\n\n# A tibble: 8 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Kansas                  Howard                    \n2 W             0.514   0.486 Arkansas                Illinois                  \n3 W             0.514   0.486 Saint Mary's            VCU                       \n4 W             0.514   0.486 UConn                   Iona                      \n5 W             0.514   0.486 TCU                     Arizona State             \n6 W             0.514   0.486 Gonzaga                 Grand Canyon              \n7 W             0.514   0.486 Northwestern            Boise State               \n8 W             0.514   0.486 UCLA                    UNC Asheville             \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\nwestround2games <- tibble(\n  team_short_display_name=\"UNC Asheville\",\n  opponent_short_display_name=\"Northwestern\"\n) %>% add_row(\n  team_short_display_name=\"Gonzaga\",\n  opponent_short_display_name=\"TCU\"\n)  %>% add_row(\n  team_short_display_name=\"Iona\",\n  opponent_short_display_name=\"VCU\"\n) %>% add_row(\n  team_short_display_name=\"Illinois\",\n  opponent_short_display_name=\"Howard\"\n) \n\nwestround2games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(westround2games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nwestround2games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(westround2games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nwestround2 <- lightgbm_fit %>% \n  predict(new_data = westround2games) %>%\n  bind_cols(westround2games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround2 <- lightgbm_fit %>% \n  predict(new_data = westround2games, type=\"prob\") %>%\n  bind_cols(westround2) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nwestround2\n\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 UNC Asheville           Northwestern              \n2 W             0.514   0.486 Gonzaga                 TCU                       \n3 W             0.514   0.486 Iona                    VCU                       \n4 W             0.514   0.486 Illinois                Howard                    \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\nwestround3games <- tibble(\n  team_short_display_name=\"UNC Asheville\",\n  opponent_short_display_name=\"Gonzaga\"\n) %>% add_row(\n  team_short_display_name=\"Howard\",\n  opponent_short_display_name=\"Iona\"\n)\n\nwestround3games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(westround3games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nwestround3games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(westround3games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nwestround3 <- lightgbm_fit %>% \n  predict(new_data = westround3games) %>%\n  bind_cols(westround3games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround3 <- lightgbm_fit %>% \n  predict(new_data = westround3games, type=\"prob\") %>%\n  bind_cols(westround3) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nwestround3\n\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 UNC Asheville           Gonzaga                   \n2 W             0.514   0.486 Howard                  Iona                      \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\nwestround4games <- tibble(\n  team_short_display_name=\"Gonzaga\",\n  opponent_short_display_name=\"Iona\"\n) \nwestround4games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(westround4games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nwestround4games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(westround4games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nwestround4 <- lightgbm_fit %>% \n  predict(new_data = westround4games) %>%\n  bind_cols(westround4games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nwestround4 <- lightgbm_fit %>% \n  predict(new_data = westround4games, type=\"prob\") %>%\n  bind_cols(westround4) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nwestround4\n\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Gonzaga                 Iona                      \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\n#Gonzaga\n\nmidwestround1games <- tibble(\n  team_short_display_name=\"Houston\",\n  opponent_short_display_name=\"N Kentucky\"\n) %>% add_row(\n  team_short_display_name=\"Iowa\",\n  opponent_short_display_name=\"Aubrun\"\n) %>% add_row(\n  team_short_display_name=\"Miami (OH)\",\n  opponent_short_display_name=\"Drake\"\n) %>% add_row(\n  team_short_display_name=\"Indiana\",\n  opponent_short_display_name=\"Kent State\"\n) %>% add_row(\n  team_short_display_name=\"Iowa State\",\n  opponent_short_display_name=\"Pittsburgh\"\n) %>% add_row(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Kennesaw State\"\n) %>% add_row(\n  team_short_display_name=\"Texas A&M\",\n  opponent_short_display_name=\"Penn State\"\n) %>% add_row(\n  team_short_display_name=\"Texas\",\n  opponent_short_display_name=\"Colgate\"\n)\nmidwestround1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(midwestround1games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nmidwestround1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(midwestround1games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nmidwestround1 <- lightgbm_fit %>% \n  predict(new_data = midwestround1games) %>%\n  bind_cols(midwestround1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround1 <- lightgbm_fit %>% \n  predict(new_data = midwestround1games, type=\"prob\") %>%\n  bind_cols(midwestround1) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround1\n\n\n# A tibble: 8 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Houston                 N Kentucky                \n2 W             0.514   0.486 Iowa                    Aubrun                    \n3 W             0.514   0.486 Miami (OH)              Drake                     \n4 W             0.514   0.486 Indiana                 Kent State                \n5 W             0.514   0.486 Iowa State              Pittsburgh                \n6 W             0.514   0.486 Xavier                  Kennesaw State            \n7 W             0.514   0.486 Texas A&M               Penn State                \n8 W             0.514   0.486 Texas                   Colgate                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\nmidwestround2games <- tibble(\n  team_short_display_name=\"N Kentucky\",\n  opponent_short_display_name=\"Iowa\"\n) %>% add_row(\n  team_short_display_name=\"Drake\",\n  opponent_short_display_name=\"Kent State\"\n)  %>% add_row(\n  team_short_display_name=\"Pittsburgh\",\n  opponent_short_display_name=\"Xavier\"\n) %>% add_row(\n  team_short_display_name=\"Penn State\",\n  opponent_short_display_name=\"Colgate\"\n) \n\nmidwestround2games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(midwestround2games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nmidwestround2games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(midwestround2games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nmidwestround2 <- lightgbm_fit %>% \n  predict(new_data = midwestround2games) %>%\n  bind_cols(midwestround2games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround2 <- lightgbm_fit %>% \n  predict(new_data = midwestround2games, type=\"prob\") %>%\n  bind_cols(midwestround2) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround2\n\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 N Kentucky              Iowa                      \n2 W             0.514   0.486 Drake                   Kent State                \n3 W             0.514   0.486 Pittsburgh              Xavier                    \n4 W             0.514   0.486 Penn State              Colgate                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\nmidwestround3games <- tibble(\n  team_short_display_name=\"Iowa\",\n  opponent_short_display_name=\"Kent State\"\n) %>% add_row(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Colgate\"\n)\n\nmidwestround3games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(midwestround3games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nmidwestround3games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(midwestround3games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nmidwestround3 <- lightgbm_fit %>% \n  predict(new_data = midwestround3games) %>%\n  bind_cols(midwestround3games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround3 <- lightgbm_fit %>% \n  predict(new_data = midwestround3games, type=\"prob\") %>%\n  bind_cols(midwestround3) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround3\n\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Iowa                    Kent State                \n2 W             0.514   0.486 Xavier                  Colgate                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\nmidwestround4games <- tibble(\n  team_short_display_name=\"Xavier\",\n  opponent_short_display_name=\"Kent State\"\n) \nmidwestround4games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(midwestround4games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nmidwestround4games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(midwestround4games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nmidwestround4 <- lightgbm_fit %>% \n  predict(new_data = midwestround4games) %>%\n  bind_cols(midwestround4games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround4 <- lightgbm_fit %>% \n  predict(new_data = midwestround4games, type=\"prob\") %>%\n  bind_cols(midwestround4) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nmidwestround4\n\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Xavier                  Kent State                \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\n#Kent State\n\nsouthround1games <- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"Texas A&M-CC\"\n) %>% add_row(\n  team_short_display_name=\"Maryland\",\n  opponent_short_display_name=\"West Virginia\"\n) %>% add_row(\n  team_short_display_name=\"San Diego St\",\n  opponent_short_display_name=\"Charlestion\"\n) %>% add_row(\n  team_short_display_name=\"Virginia\",\n  opponent_short_display_name=\"Furman\"\n) %>% add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_short_display_name=\"NC State\"\n) %>% add_row(\n  team_short_display_name=\"Baylor\",\n  opponent_short_display_name=\"UCSB\"\n) %>% add_row(\n  team_short_display_name=\"Missouri\",\n  opponent_short_display_name=\"Utah State\"\n) %>% add_row(\n  team_short_display_name=\"Arizona\",\n  opponent_short_display_name=\"Princeton\"\n)\nsouthround1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(southround1games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nsouthround1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(southround1games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nsouthround1 <- lightgbm_fit %>% \n  predict(new_data = southround1games) %>%\n  bind_cols(southround1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround1 <- lightgbm_fit %>% \n  predict(new_data = southround1games, type=\"prob\") %>%\n  bind_cols(southround1) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround1\n\n\n# A tibble: 8 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Alabama                 Texas A&M-CC              \n2 W             0.514   0.486 Maryland                West Virginia             \n3 W             0.514   0.486 San Diego St            Charlestion               \n4 W             0.514   0.486 Virginia                Furman                    \n5 W             0.514   0.486 Creighton               NC State                  \n6 W             0.514   0.486 Baylor                  UCSB                      \n7 W             0.514   0.486 Missouri                Utah State                \n8 W             0.514   0.486 Arizona                 Princeton                 \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\nsouthround2games <- tibble(\n  team_short_display_name=\"Alabama\",\n  opponent_short_display_name=\"West Virginia\"\n) %>% add_row(\n  team_short_display_name=\"San Diego St\",\n  opponent_short_display_name=\"Furman\"\n)  %>% add_row(\n  team_short_display_name=\"Creighton\",\n  opponent_short_display_name=\"UCSB\"\n) %>% add_row(\n  team_short_display_name=\"Missouri\",\n  opponent_short_display_name=\"Arizona\"\n) \n\nsouthround2games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(southround2games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nsouthround2games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(southround2games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nsouthround2 <- lightgbm_fit %>% \n  predict(new_data = southround2games) %>%\n  bind_cols(southround2games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround2 <- lightgbm_fit %>% \n  predict(new_data = southround2games, type=\"prob\") %>%\n  bind_cols(southround2) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround2\n\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Alabama                 West Virginia             \n2 W             0.514   0.486 San Diego St            Furman                    \n3 W             0.514   0.486 Creighton               UCSB                      \n4 W             0.514   0.486 Missouri                Arizona                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\nsouthround3games <- tibble(\n  team_short_display_name=\"Furman\",\n  opponent_short_display_name=\"Alabama\"\n) %>% add_row(\n  team_short_display_name=\"UCSB\",\n  opponent_short_display_name=\"Missouri\"\n)\n\nsouthround3games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(southround3games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nsouthround3games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(southround3games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nsouthround3 <- lightgbm_fit %>% \n  predict(new_data = southround3games) %>%\n  bind_cols(southround3games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround3 <- lightgbm_fit %>% \n  predict(new_data = southround3games, type=\"prob\") %>%\n  bind_cols(southround3) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround3\n\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Furman                  Alabama                   \n2 W             0.514   0.486 UCSB                    Missouri                  \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\nsouthround4games <- tibble(\n  team_short_display_name=\"UCSB\",\n  opponent_short_display_name=\"Furman\"\n) \nsouthround4games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(southround4games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nsouthround4games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(southround4games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nsouthround4 <- lightgbm_fit %>% \n  predict(new_data = southround4games) %>%\n  bind_cols(southround4games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround4 <- lightgbm_fit %>% \n  predict(new_data = southround4games, type=\"prob\") %>%\n  bind_cols(southround4) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nsouthround4\n\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 UCSB                    Furman                    \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\n#Furman\n\neastround1games <- tibble(\n  team_short_display_name=\"Purdue\",\n  opponent_short_display_name=\"Fair Dickinson\"\n) %>% add_row(\n  team_short_display_name=\"Memphis\",\n  opponent_short_display_name=\"FAU\"\n) %>% add_row(\n  team_short_display_name=\"Duke\",\n  opponent_short_display_name=\"Oral Roberts\"\n) %>% add_row(\n  team_short_display_name=\"Tennessee\",\n  opponent_short_display_name=\"Louisiana\"\n) %>% add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Providence\"\n) %>% add_row(\n  team_short_display_name=\"Kansas State\",\n  opponent_short_display_name=\"Montana State\"\n) %>% add_row(\n  team_short_display_name=\"Michigan State\",\n  opponent_short_display_name=\"USC\"\n) %>% add_row(\n  team_short_display_name=\"Marquette\",\n  opponent_short_display_name=\"Vermont\"\n)\neastround1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(eastround1games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\neastround1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(eastround1games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\neastround1 <- lightgbm_fit %>% \n  predict(new_data = eastround1games) %>%\n  bind_cols(eastround1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround1 <- lightgbm_fit %>% \n  predict(new_data = eastround1games, type=\"prob\") %>%\n  bind_cols(eastround1) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\neastround1\n\n\n# A tibble: 8 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Purdue                  Fair Dickinson            \n2 W             0.514   0.486 Memphis                 FAU                       \n3 W             0.514   0.486 Duke                    Oral Roberts              \n4 W             0.514   0.486 Tennessee               Louisiana                 \n5 W             0.514   0.486 Kentucky                Providence                \n6 W             0.514   0.486 Kansas State            Montana State             \n7 W             0.514   0.486 Michigan State          USC                       \n8 W             0.514   0.486 Marquette               Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\neastround2games <- tibble(\n  team_short_display_name=\"Fair Dickinson\",\n  opponent_short_display_name=\"FAU\"\n) %>% add_row(\n  team_short_display_name=\"Oral Roberts\",\n  opponent_short_display_name=\"Tennessee\"\n)  %>% add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Kansas State\"\n) %>% add_row(\n  team_short_display_name=\"USC\",\n  opponent_short_display_name=\"Vermont\"\n) \n\neastround2games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(eastround2games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\neastround2games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(eastround2games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\neastround2 <- lightgbm_fit %>% \n  predict(new_data = eastround2games) %>%\n  bind_cols(eastround2games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround2 <- lightgbm_fit %>% \n  predict(new_data = eastround2games, type=\"prob\") %>%\n  bind_cols(eastround2) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\neastround2\n\n\n# A tibble: 4 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Fair Dickinson          FAU                       \n2 W             0.514   0.486 Oral Roberts            Tennessee                 \n3 W             0.514   0.486 Kentucky                Kansas State              \n4 W             0.514   0.486 USC                     Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\neastround3games <- tibble(\n  team_short_display_name=\"Oral Roberts\",\n  opponent_short_display_name=\"Fair Dickinson\"\n) %>% add_row(\n  team_short_display_name=\"Kentucky\",\n  opponent_short_display_name=\"Vermont\"\n)\n\neastround3games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(eastround3games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\neastround3games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(eastround3games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\neastround3 <- lightgbm_fit %>% \n  predict(new_data = eastround3games) %>%\n  bind_cols(eastround3games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround3 <- lightgbm_fit %>% \n  predict(new_data = eastround3games, type=\"prob\") %>%\n  bind_cols(eastround3) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\neastround3\n\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Oral Roberts            Fair Dickinson            \n2 W             0.514   0.486 Kentucky                Vermont                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\neastround4games <- tibble(\n  team_short_display_name=\"Fair Dickinson\",\n  opponent_short_display_name=\"Kentucky\"\n) \neastround4games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(eastround4games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\neastround4games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(eastround4games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\neastround4 <- lightgbm_fit %>% \n  predict(new_data = eastround4games) %>%\n  bind_cols(eastround4games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\neastround4 <- lightgbm_fit %>% \n  predict(new_data = eastround4games, type=\"prob\") %>%\n  bind_cols(eastround4) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\neastround4\n\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Fair Dickinson          Kentucky                  \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\n#Fair Dickinson\n\nfinalfour1games <- tibble(\n  team_short_display_name=\"Furman\",\n  opponent_short_display_name=\"Fair Dickinson\"\n) %>% add_row(\n  team_short_display_name=\"Kent State\",\n  opponent_short_display_name=\"Gonzaga\"\n)\n\nfinalfour1games <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(finalfour1games)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nfinalfour1games <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(finalfour1games)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nfinalfour1games <- lightgbm_fit %>% \n  predict(new_data = finalfour1games) %>%\n  bind_cols(finalfour1games) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nfinalfour1games <- lightgbm_fit %>% \n  predict(new_data = finalfour1games, type=\"prob\") %>%\n  bind_cols(finalfour1games) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nfinalfour1games\n\n\n# A tibble: 2 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Furman                  Fair Dickinson            \n2 W             0.514   0.486 Kent State              Gonzaga                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\nchampionship <- tibble(\n  team_short_display_name=\"Fair Dickinson\",\n  opponent_short_display_name=\"Gonzaga\"\n) \nchampionship <- modelgames %>% \n  group_by(team_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  select(-team_result, -starts_with(\"opponent\")) %>% \n  right_join(championship)\n\n\nJoining, by = \"team_short_display_name\"\n\n\nCode\nchampionship <- modelgames %>% \n  group_by(opponent_short_display_name) %>% \n  filter(game_date == max(game_date) & season == 2023) %>% \n  ungroup() %>% \n  select(-team_result, -starts_with(\"team\"), -game_id, -game_date, -season) %>% \n  right_join(championship)\n\n\nJoining, by = \"opponent_short_display_name\"\n\n\nCode\nchampionship <- lightgbm_fit %>% \n  predict(new_data = championship) %>%\n  bind_cols(championship) %>% \n  select(.pred_class, team_short_display_name, opponent_short_display_name, everything())\n\nchampionship <- lightgbm_fit %>% \n  predict(new_data = championship, type=\"prob\") %>%\n  bind_cols(championship) %>% \n  select(.pred_class, .pred_W, .pred_L, team_short_display_name, opponent_short_display_name, everything())\n\nchampionship\n\n\n# A tibble: 1 × 16\n  .pred_class .pred_W .pred_L team_short_display_name opponent_short_display_n…¹\n  <fct>         <dbl>   <dbl> <chr>                   <chr>                     \n1 W             0.514   0.486 Fair Dickinson          Gonzaga                   \n# ℹ abbreviated name: ¹​opponent_short_display_name\n# ℹ 11 more variables: opponent_rolling_ppp <dbl>,\n#   opponent_rolling_rebounds <dbl>, opponent_rolling_threes <dbl>,\n#   opponent_rolling_blocks <dbl>, game_id <int>, game_date <date>,\n#   season <int>, team_rolling_ppp <dbl>, team_rolling_rebounds <dbl>,\n#   team_rolling_threes <dbl>, team_rolling_blocks <dbl>\n\n\nCode\n#Gonzaga\n\n\nIn order to create a model capable of predicting this season’s tournament, I wanted to identify the best predictors capable of highlighting a good basketball team. After much deliberation, I concluded that a teams points per possession, their opponents points per possession, rebounds, three pointers, and blocks were deemed worthy of being put into my model. These predictors I believed were a good range of different offensive and defensive metrics of who could win a given basketball game. If you score relatively well and defend at high enough level, you could win a basketball game of such stakes.\n\n\nCode\nlibrary(gt)\n\nsummary(game_recipe) %>%\n  select(variable, role) %>% \n  filter(role != \"ID\") %>%\n  gt() %>%\n  tab_header(\n    title = \"The predictors\",\n    subtitle = \"Offensive and defensive metrics\"\n  ) %>%  \n  tab_source_note(\n    source_note = md(\"**By:** Peter Educate\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %>%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %>%\n  opt_row_striping() %>% \n  opt_table_lines(\"none\")\n\n\n\n\n\n\n  \n    \n      The predictors\n    \n    \n      Offensive and defensive metrics\n    \n  \n  \n    \n      variable\n      role\n    \n  \n  \n    team_rolling_ppp\npredictor\n    opponent_rolling_ppp\npredictor\n    team_rolling_rebounds\npredictor\n    opponent_rolling_rebounds\npredictor\n    team_rolling_threes\npredictor\n    opponent_rolling_threes\npredictor\n    team_rolling_blocks\npredictor\n    opponent_rolling_blocks\npredictor\n    team_result\noutcome\n  \n  \n    \n      By: Peter Educate\n    \n  \n  \n\n\n\n\nI utilized a LightGBM algorithm as opposed to linear or XGBoost because it yielded the most accuracy, even by slight metrics. My model predicted roughly 68% of the games correctly so I figured that with that high of a number, I stood a chance in at least doing well. Now I understand that the NCAA men’s basketball tournament throughout it’s history has had what many call “Cinderellas” so I was a bit nervous initially.\nHowever, not even the most accurate men’s basketball pundit could believe what my model would predict for 2023.\nUltimately, my model predicted that damn near every lower seed would win a few games. Most shockingly, my model predicted that a 13 and 16 seed would make it to the Final Four. No, you didn’t misread. My model believed it would have a 16 seed make the Final Four, something that has never happened in the tournament’s rich history.\nBut for just a moment, a brief sliver of what I believed was my life flashing before my eyes, my model was…right? Farleigh Dickinson in the middle of whoever the hell knows beat the number one seed Purdue.\n\n\nCode\nlibrary(gt)\n\neastround1 %>% \n  select(team_short_display_name, .pred_class, .pred_W, opponent_short_display_name) %>%\n  gt() %>% \n  cols_label(\n    team_short_display_name = \"Team\",\n    .pred_class = \"Prediction\",\n    .pred_W = \"Win Confidence\",\n    opponent_short_display_name = \"Opponent\"\n  ) %>%\n  tab_header(\n    title = \"East Round 1 Predictions\",\n    subtitle = \"Is it an upset if Purdue is a constant disappointment?\"\n  ) %>%  \n  tab_source_note(\n    source_note = md(\"**By:** Peter Educate\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %>%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %>%\n  opt_row_striping() %>% \n  opt_table_lines(\"none\") %>%\n    fmt_percent(\n    columns = c(.pred_W),\n    decimals = 1\n  )\n\n\n\n\n\n\n  \n    \n      East Round 1 Predictions\n    \n    \n      Is it an upset if Purdue is a constant disappointment?\n    \n  \n  \n    \n      Team\n      Prediction\n      Win Confidence\n      Opponent\n    \n  \n  \n    Purdue\nW\n51.4%\nFair Dickinson\n    Memphis\nW\n51.4%\nFAU\n    Duke\nW\n51.4%\nOral Roberts\n    Tennessee\nW\n51.4%\nLouisiana\n    Kentucky\nW\n51.4%\nProvidence\n    Kansas State\nW\n51.4%\nMontana State\n    Michigan State\nW\n51.4%\nUSC\n    Marquette\nW\n51.4%\nVermont\n  \n  \n    \n      By: Peter Educate\n    \n  \n  \n\n\n\n\nAt first, I thought my model wanted to be edgy with it’s selection of Farleigh Dickinson. But it wasn’t edgy…it was insane. In an example of insanity, my model had Farleigh Dickinson beating blue blood Kentucky in the Elite 8.\n\n\nCode\nlibrary(gt)\n\neastround4 %>% \n  select(team_short_display_name, .pred_class, .pred_W, opponent_short_display_name) %>%\n  gt() %>% \n  cols_label(\n    team_short_display_name = \"Team\",\n    .pred_class = \"Prediction\",\n    .pred_W = \"Win Confidence\",\n    opponent_short_display_name = \"Opponent\"\n  ) %>%\n  tab_header(\n    title = \"East Elite 8 Prediction\",\n    subtitle = \"Ok it was funny at first but this should not be happening\"\n  ) %>%  \n  tab_source_note(\n    source_note = md(\"**By:** Peter Educate\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", weight = \"bold\", align = \"left\"),\n    locations = cells_title(\"title\")\n  ) %>% \n  tab_style(\n    style = cell_text(color = \"black\", align = \"left\"),\n    locations = cells_title(\"subtitle\")\n  ) %>%\n  tab_style(\n     locations = cells_column_labels(columns = everything()),\n     style = list(\n       cell_borders(sides = \"bottom\", weight = px(3)),\n       cell_text(weight = \"bold\", size=12)\n     )\n   ) %>%\n  opt_row_striping() %>% \n  opt_table_lines(\"none\") %>%\n    fmt_percent(\n    columns = c(.pred_W),\n    decimals = 1\n  )\n\n\n\n\n\n\n  \n    \n      East Elite 8 Prediction\n    \n    \n      Ok it was funny at first but this should not be happening\n    \n  \n  \n    \n      Team\n      Prediction\n      Win Confidence\n      Opponent\n    \n  \n  \n    Fair Dickinson\nW\n51.4%\nKentucky\n  \n  \n    \n      By: Peter Educate\n    \n  \n  \n\n\n\n\nUltimately, my model then had them going to the championship to only lose to Gonzaga in what would be either biggest achievement or travesty in NCAA men’s history. Because of these outrageous predictions, my bracket managed to score a measly 260 points to finish in the top 3%.\nTranslation: not good.\nHowever, there’s always next year to predict a bracket. I imagine I might have better chances next year…right?\nThe code I wrote to make this relied heavily on hoopR and tidymodels."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "QuartoBlog",
    "section": "",
    "text": "Fantasy Football Predictions for 2023\n\n\n\n\n\n\n\nmachinelearning\n\n\ncode\n\n\nfantasy\n\n\n\n\n\n\n\n\n\n\n\nApr 25, 2023\n\n\nPeter Educate\n\n\n\n\n\n\n  \n\n\n\n\nPredicting a basketball tournament based on luck went about as well as expected.\n\n\n\n\n\n\n\nmachinelearning\n\n\ncode\n\n\nbasketball\n\n\n\n\n\n\n\n\n\n\n\n\nApr 25, 2023\n\n\nPeter Educate\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nApr 13, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nApr 10, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]